'scopeName': 'source.log'
'name': 'Log'
'fileTypes': [
  'txt',
  'log'
]
# Try to match a time stamp on first line
'firstLineMatch': '^[0-9]{2,}[-.:/ ]?[0-9]{2,}[-.:/ ]?[0-9]{2,}[-.: ]?[0-9]{2,}[-.: ]?'

'patterns': [
  {
    'include': '#general'
  }
  {
    'include': '#timestamps'
  }
  {
    'include': '#android'
  }
  {
    'include': '#ios'
  }
  {
    'include': '#idea'
  }
  {
    'include': '#apache'
  }
  {
    'include': '#nabto'
  }
  {
    'include': '#adobe'
  }
]

'repository':
  'general':
    'patterns': [
      {
        'comment': 'paths'
        'match': '[ \\[]\/[^ ,]+',
        'name': 'keyword.log'
      }
      {
        'comment': 'urls'
        'match': ' [a-z]+:\/\/[^ ,]+'
        'name': 'keyword.log'
      }
      {
        'match': '".*?"'
        'name': 'keyword.log'
      }
      {
        'match': '\'.*?\''
        'name': 'keyword.log'
      }
    ]
  'timestamps':
    'patterns': [
      {
        'match': '^[0-9.,:/\\-]+ ?[0-9.,:/\\-]+'
        'name': 'definition.comment.timestamp.log'
      }
      {
        'match': '^\\[[A-Za-z0-9 :]+\\]?'
        'name': 'definition.comment.timestamp.log'
      }
    ]
  'android':
    'patterns': [
      {
        'match': '.* GC_FOR_ALLOC .*'
        'name': 'variable.parameter.gc-alloc.log'
      }
      {
        'match': '[A|E]\/.*?[﹕|:]'
        'name': 'definition.log.log-error'
      }
      {
        'match': 'W\/.*?[﹕|:]'
        'name': 'definition.log.log-warning'
      }
      {
        'match': 'D\/.*?[﹕|:]'
        'name': 'definition.log.log-debug'
      }
      {
        'match': 'I\/.*?[﹕|:]'
        'name': 'definition.log.log-info'
      }
      {
        'match': 'V\/.*?[﹕|:]'
        'name': 'definition.log.log-verbose'
      }
    ]
  'ios':
    'patterns': [
      {
        'match': '^[A-Z]+[a-zA-Z0-9\/ ]*?:'
        'name': 'definition.log.log-verbose'
      }
      {
        'match': '[A-Z0-9]{8}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{12}'
        'name': 'keyword.log'
      }
    ]
  'idea':
    'patterns': [
      {
        'match': '\\[[0-9\ ]*\\].*ERROR ?'
        'name': 'definition.log.log-error'
      }
      {
        'match': '\\[[0-9\ ]*\\].*WARN ?'
        'name': 'definition.log.log-warning'
      }
      {
        'match': '\\[[0-9\ ]*\\].*INFO ?'
        'name': 'definition.log.log-info'
      }
    ]
  'apache':
    'patterns': [
      {
        'match': ' ([4|5][0-9]{2}) [0-9]*$'
        'captures':
          '1':
            'name': 'definition.log.log-failed'
      }
      {
        'match': ' ([2|3]0[0-9]{1}) [0-9]*$'
        'captures':
          '1':
            'name': 'definition.log.log-success'
      }
      {
        'match': '(?i)\\[error\\]'
        'name': 'definition.log.log-error'
      }
      {
        'match': '(?i)\\[warn\\]'
        'name': 'definition.log.log-warning'
      }
      {
        'match': '(?i)\\[debug\\]'
        'name': 'definition.log.log-debug'
      }
      {
        'match': '(?i)\\[patch\\]'
        'name': 'definition.log.log-patch'
      }
      {
        'match': '(?i)\\[info\\]'
        'name': 'definition.log.log-info'
      }
      {
        'match': '(?i)\\[notice\\]'
        'name': 'definition.log.log-verbose'
      }
    ]
  'nabto':
    'patterns': [
      {
        'match': '^\#.*'
        'name': ''
      }
      {
        'match': '\{00[0-9a-f]+\}'
        'name': ''
      }
      {
        'match': '\\[[A-Z_]+,(fatal|error)[^:]*'
        'name': 'definition.log.log-error'
      }
      {
        'match': '\\[[A-Z_]+,warn[^:]*'
        'name': 'definition.log.log-warning'
      }
      {
        'match': '\\[[A-Z_]+,info[^:]*'
        'name': 'definition.log.log-info'
      }
      {
        'match': '\\[[A-Z_]+,debug[^:]*'
        'name': 'definition.log.log-debug'
      }
      {
        'match': '\\[[A-Z_]+,(trace|thrd)[^:]*'
        'name': 'definition.log.log-verbose'
      }
    ]
  'adobe':
    'patterns': [
      {
        'match': '[\\*|=]{8,}'
        'name': 'definition.comment.separator'
      }
      {
        'begin': '<CommandLineArguments>'
        'end': '</CommandLineArguments>'
        'name': 'entity.name.tag'
      }
    ]
